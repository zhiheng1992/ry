<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.cms.type.mapper.CMSTypeMapper">
    <!-- 查询结果resultSet和实体类型CMSType之间的映射关系 -->
    <resultMap type="CMSType" id="CMSTypeResult">
        <id     property="typeId"        column="type_id"       />
        <result property="typeName"      column="type_name"     />
        <result property="typeSort"      column="type_sort"     />
        <result property="status"        column="status"        />
        <result property="createBy"      column="create_by"     />
        <result property="createTime"    column="create_time"   />
        <result property="updateBy"      column="update_by"     />
        <result property="updateTime"    column="update_time"   />
        <result property="remark"        column="remark"        />
    </resultMap>

    <!-- 条件查询 -->
    <select id="selectCMSTypeList" parameterType="CMSType" resultMap="CMSTypeResult">
        select type_id, type_name, type_sort, status, create_by, create_time, update_by, update_time, remark
        from cms_type
        <where>
            <if test="typeName != null and typeName != ''">
                <!-- concat是MySQL数据库中的函数，用来实现字符串拼接。
                     concat(string...)
                 -->
                AND type_name like concat('%', #{typeName}, '%')
            </if>
        </where>
    </select>

    <!-- 根据公告类型名称查询公告类型对象 -->
    <select id="checkTypeNameUnique" parameterType="String"
            resultMap="com.ruoyi.project.cms.type.mapper.CMSTypeMapper.CMSTypeResult">
        select type_id, type_name, type_sort, status, create_by, create_time, update_by, update_time, remark
        from cms_type
        where type_name = #{typeName}
    </select>



    <!--新增公告类型-->
    <insert id="insertCMSType" parameterType="CMSType" useGeneratedKeys="true" keyProperty="typeId">
        insert into cms_type(
        <if test="typeId != null and typeId != 0">type_id,</if>
        <if test="typeName != null and typeName != ''">type_name,</if>
        <if test="typeSort != null and typeSort != ''">type_sort,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        ) values (
        <if test="typeId != null and typeId != 0">#{typeId},</if>
        <if test="typeName != null and typeName != ''">#{typeName},</if>
        <if test="typeSort != null and typeSort != ''">#{typeSort},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>


    <!-- 根据公告类型名称查询公告类型对象 -->
    <select id="selectCMSTypeById" parameterType="Long"
            resultMap="com.ruoyi.project.cms.type.mapper.CMSTypeMapper.CMSTypeResult">
        select type_id, type_name, type_sort, status, create_by, create_time, update_by, update_time, remark
        from cms_type
        where type_id = #{typeId}
    </select>

    <!-- 根据主键更新公告类型 -->
    <update id="updateCmsType" parameterType="CMSType">
        update cms_type
        <set>
            <if test="typeName != null and typeName != ''">type_name = #{typeName},</if>
            <if test="typeSort != null and typeSort != ''">type_sort = #{typeSort},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where type_id = #{typeId}
    </update>

    <delete id="deleteCMSTypeByIds" parameterType="Long">
        delete from cms_type where type_id in
        <foreach collection="array" item="typeId" open="(" separator="," close=")">
            #{typeId}
        </foreach>
    </delete>


</mapper>
